import django
import os

from telegram import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

os.environ['DJANGO_SETTINGS_MODULE'] = 'tele_core.settings'
django.setup()

from home.models import User

API_KEY = '6363086604:AAF5MSR2MJ1dpSOwYNRneW70fq28_avtDEo'

import logging

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.ERROR)


def handle_message(update, context):
    user = get_user(update.effective_user.id)
    if user:
        show_main_menu(update, context)
    else:
        keyboard = ReplyKeyboardMarkup([[KeyboardButton("üì≤–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)]],
                                       resize_keyboard=True)
        context.bot.send_message(chat_id=update.effective_chat.id,
                                 text="–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É 'üì≤–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
                                 reply_markup=keyboard)


def process_contact(update, context):
    contact = update.message.contact
    user_data = context.user_data

    if contact is not None:
        if 'phone_number' not in user_data:
            phone_number = contact.phone_number
            user_data['phone_number'] = phone_number

            user = User(
                id=update.effective_user.id,
                phone_number=user_data['phone_number']
            )
            user.save()

            keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—åüõí")],
                                            [KeyboardButton("–ú–æ–∏ –∑–∞–∫–∞–∑—ãüìñ"), KeyboardButton("–ö–µ—à–±–µ–∫üí∞")],
                                            [KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è"), KeyboardButton("–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏‚òéÔ∏è")]],
                                           resize_keyboard=True)
            update.message.reply_text('–°–ø–∞—Å–∏–±–æ! –ù–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω.', reply_markup=keyboard)
    else:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.')


def get_user(user_id):
    try:
        return User.objects.get(id=user_id)
    except User.DoesNotExist:
        return None


def get_or_create_user(user_id):
    user, created = User.objects.get_or_create(id=user_id)
    return user


def show_main_menu(update, context, from_support=False):
    if from_support:
        keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—åüõí")],
                                        [KeyboardButton("–ú–æ–∏ –∑–∞–∫–∞–∑—ãüìñ"), KeyboardButton("–ö–µ—à–±–µ–∫üí∞")],
                                        [KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è"), KeyboardButton("–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏‚òéÔ∏è")]],
                                       resize_keyboard=True)
        update.message.reply_text('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', reply_markup=keyboard)
    else:
        keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—åüõí")],
                                        [KeyboardButton("–ú–æ–∏ –∑–∞–∫–∞–∑—ãüìñ"), KeyboardButton("–ö–µ—à–±–µ–∫üí∞")],
                                        [KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è"), KeyboardButton("–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏‚òéÔ∏è")]],
                                       resize_keyboard=True)
        update.message.reply_text('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', reply_markup=keyboard)


def show_support_menu(update, context):
    keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
                                    [KeyboardButton("üìû–ü–æ–∑–≤–æ–Ω–∏—Ç—å"), KeyboardButton("üí¨–ù–∞–ø–∏—Å–∞—Ç—å")]],
                                   resize_keyboard=True)
    update.message.reply_text('–ú–µ–Ω—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏:', reply_markup=keyboard)

    dp.add_handler(MessageHandler(Filters.regex('^–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'), show_main_menu))


def show_cashback_menu(update, context):
    keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
                                   resize_keyboard=True)
    update.message.reply_text('üí∞–í–∞—à –∫–µ—à–±–µ–∫: 15 TJK', reply_markup=keyboard)

    dp.add_handler(MessageHandler(Filters.regex('^–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'), show_main_menu))


def show_settings_menu(update, context):
    keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"), KeyboardButton("üì≤–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä")]],
                                   resize_keyboard=True)
    update.message.reply_text('‚öôÔ∏è–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', reply_markup=keyboard)

    dp.add_handler(MessageHandler(Filters.regex('^–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'), show_main_menu))


def change_phone_number(update, context):
    keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]], resize_keyboard=True)
    update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –≤–∏–¥–µ: +998 ** *** ****",
                              reply_markup=keyboard)
    context.user_data['waiting_for_new_number'] = True


def process_new_phone_number(update, context):
    if 'waiting_for_new_number' in context.user_data and context.user_data['waiting_for_new_number']:
        new_phone_number = update.message.text.strip()
        user = get_user(update.effective_user.id)

        if new_phone_number and len(new_phone_number) == 12:
            if user:
                user.phone_number = new_phone_number
                user.save()

                keyboard = ReplyKeyboardMarkup([[KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]], resize_keyboard=True)
                update.message.reply_text(f"–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ +{new_phone_number}.",
                                          reply_markup=keyboard)
                show_main_menu(update, context)
            else:
                update.message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        else:
            update.message.reply_text("–í—ã –Ω–µ –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")

        context.user_data['waiting_for_new_number'] = False


def support_call(update, context):
    phone_number = '+998997072820'
    keyboard = []
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(
        f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: \n '
        f'üìû–ü–æ–∑–≤–æ–Ω–∏—Ç—å: <a href="tel:{phone_number}">{phone_number}</a>',
        reply_markup=reply_markup,
        parse_mode='HTML'
    )


def support_message(update, context):
    chat_link = f'https://t.me/karimov_alirizo'
    keyboard = [[InlineKeyboardButton(text='üí¨–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º', url=f'{chat_link}')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(
        f'–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º. \n ',
        reply_markup=reply_markup,
        parse_mode='HTML'
    )


def go_back(update, context):
    update.message.reply_text('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.')
    show_main_menu(update, context)


def order_menu(update, context):
    keyboard = ReplyKeyboardMarkup(
        [[KeyboardButton("üöô–î–æ—Å—Ç–∞–≤–∫–∞"), KeyboardButton("üö∂–°–∞–º–æ–≤—ã–≤–æ–∑"), KeyboardButton("‚¨ÖÔ∏è–ù–∞–∑–∞–¥")]],
        resize_keyboard=True)
    update.message.reply_text('üõíÔ∏è–ú–µ–Ω—é –∑–∞–∫–∞–∑–∞—Ç—å:', reply_markup=keyboard)

    dp.add_handler(MessageHandler(Filters.regex('^‚¨ÖÔ∏è–ù–∞–∑–∞–¥$'), go_back))


if __name__ == '__main__':
    updater = Updater(API_KEY, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", handle_message))
    dp.add_handler(MessageHandler(Filters.contact, process_contact))
    dp.add_handler(MessageHandler(Filters.regex('^–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'), show_main_menu))
    dp.add_handler(MessageHandler(Filters.regex('^–ö–µ—à–±–µ–∫üí∞$'), show_cashback_menu))
    dp.add_handler(MessageHandler(Filters.regex('^–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏‚òéÔ∏è$'), show_support_menu))
    dp.add_handler(MessageHandler(Filters.regex('^–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è$'), show_settings_menu))
    dp.add_handler(MessageHandler(Filters.regex('^üì≤–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä$'), change_phone_number))
    dp.add_handler(MessageHandler(Filters.regex('^üìû–ü–æ–∑–≤–æ–Ω–∏—Ç—å$'), support_call))
    dp.add_handler(MessageHandler(Filters.regex('^üí¨–ù–∞–ø–∏—Å–∞—Ç—å$'), support_message))
    dp.add_handler(MessageHandler(Filters.regex('^–ó–∞–∫–∞–∑–∞—Ç—åüõí$'), order_menu))
    dp.add_handler(
        MessageHandler(Filters.regex('^‚¨ÖÔ∏è–ù–∞–∑–∞–¥$'), go_back))
    dp.add_handler(MessageHandler(Filters.text, process_new_phone_number))

    updater.start_polling(1.0)
    updater.idle()
